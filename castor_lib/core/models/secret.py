"""Path: castor/core/models/secret.py

This module contains the Pydantic models for the Secret resource.

    - `_id`: ObjectId
    - `project_id`: String (reference to Projects Collection)
    - `name`: String
    - `type`: String (e.g. "Password", "API Key", "SSH Key", "Certificate")
    - `shared`: Boolean (e.g., true if shared with other users)
    - `username`: String
    - `password`: String
    - `public_key`: String
    - `private_key`: String
    - `certificate`: String
    - `url`: String
    - `notes`: String
"""

from typing import Optional
from pydantic import BaseModel

class SecretBase(BaseModel):
    """Base model for the Secret resource.
    
    Note how _id is not included in the base model.
    This is because _id is generated by the database
    and should not be included when creating a new secret.

    """
    project_id: Optional[str] = None
    name: str
    type: str
    shared: Optional[bool] = False
    username: Optional[str] = None
    password: Optional[str] = None
    public_key: Optional[str] = None
    private_key: Optional[str] = None
    certificate: Optional[str] = None
    url: Optional[str] = None
    notes: Optional[str] = None

class Secret(SecretBase):
    """Model for the Secret resource."""
    _id: str
