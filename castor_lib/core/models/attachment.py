"""Path: castor/core/models/attachment.py

This module contains the Pydantic models for the Attachment resource.

    - `_id`: ObjectId
    - `project_id`: String (reference to Projects Collection)
    - `name`: String
    - `file_name`: String
    - `timestamp`: Date
    - `file_url`: String or Binary data
    - `uploaded_by`: User ID (reference to Users Collection)
    - `notes`: String
"""

from datetime import datetime
from typing import Optional
from pydantic import BaseModel

class AttachmentBase(BaseModel):
    """Base model for the Attachment resource.
    
    Note how _id is not included in the base model.
    This is because _id is generated by the database
    and should not be included when creating a new attachment.

    """
    project_id: Optional[str] = None
    name: str
    file_name: str
    timestamp: Optional[datetime] = None
    file_url: str
    uploaded_by: Optional[str] = None
    notes: Optional[str] = None

class Attachment(AttachmentBase):
    """Model for the Attachment resource."""
    _id: str
