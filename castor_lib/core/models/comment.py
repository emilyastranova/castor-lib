"""Path: castor/core/models/comment.py

This module contains the Pydantic models for the Comment resource.
    - `_id`: ObjectId
    - `project_id`: String (reference to Projects Collection)
    - `task_id`: ObjectId (reference to Tasks Collection)
    - `timestamp`: Date
    - `user_id`: ObjectId (reference to Users Collection)
    - `content`: String
"""
from datetime import datetime
from typing import Optional
from pydantic import BaseModel

class CommentBase(BaseModel):
    """Base model for the Comment resource.
    
    Note how _id is not included in the base model.
    This is because _id is generated by the database
    and should not be included when creating a new comment.

    """
    project_id: Optional[str] = None
    task_id: Optional[str] = None
    timestamp: Optional[datetime] = None
    user_id: str
    content: str

class Comment(CommentBase):
    """Model for the Comment resource."""
    _id: str
